name: Openwrt Build Bot
on:
  push:
    branches: master
  schedule:
  - cron: 0 2 * * *

jobs:
  buildpkg:
    name: Build Openwrt Package
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        SDK_URL:
        - https://downloads.openwrt.org/releases/19.07.0/targets/ipq806x/generic/openwrt-sdk-19.07.0-ipq806x-generic_gcc-7.5.0_musl_eabi.Linux-x86_64.tar.xz
        - https://downloads.openwrt.org/releases/19.07.0/targets/ipq40xx/generic/openwrt-sdk-19.07.0-ipq40xx-generic_gcc-7.5.0_musl_eabi.Linux-x86_64.tar.xz
        - https://downloads.openwrt.org/releases/19.07.0/targets/ar71xx/generic/openwrt-sdk-19.07.0-ar71xx-generic_gcc-7.5.0_musl.Linux-x86_64.tar.xz
        - https://downloads.openwrt.org/releases/19.07.0/targets/ramips/mt7621/openwrt-sdk-19.07.0-ramips-mt7621_gcc-7.5.0_musl.Linux-x86_64.tar.xz
    steps:
    - uses: actions/checkout@master
    - name: Env for Openwrt SDK
      run: sudo apt install -y libev-dev libc-ares-dev libudns-dev libncurses-dev
    - name: Download Openwrt SDK
      env:
        SDK_URL: ${{ matrix.SDK_URL }}
      run: |
        wget $SDK_URL
        tar xf $(basename $SDK_URL)
    - name: Download Packages
      env:
        SDK_URL: ${{ matrix.SDK_URL }}
      run: |
        SDK_HOME=$(head -c -8 <<< $(basename $SDK_URL))
        cd $SDK_HOME
        # Shadowsocks
        git clone https://github.com/shadowsocks/luci-app-shadowsocks package/luci-app-shadowsocks
        git clone https://github.com/shadowsocks/openwrt-shadowsocks package/shadowsocks-libev
        git clone https://github.com/aa65535/openwrt-simple-obfs package/simple-obfs
        # Misc
        git clone https://github.com/aa65535/openwrt-chinadns package/chinadns
        git clone https://github.com/aa65535/openwrt-dns-forwarder package/dns-forwarder
        git clone https://github.com/aa65535/openwrt-dist-luci package/openwrt-dist-luci
        # Vlmcsd
        git clone https://github.com/mchome/openwrt-vlmcsd package/vlmcsd
        git clone https://github.com/mchome/luci-app-vlmcsd package/luci-app-vlmcsd
        # V2Ray
        git clone https://github.com/kuoruan/openwrt-v2ray package/v2ray-core
        git clone https://github.com/kuoruan/luci-app-v2ray package/luci-app-v2ray
        # V2Ray-Plugin
        git clone https://github.com/honwen/openwrt-v2ray-plugin package/v2ray-plugin
        # Clash
        git clone https://github.com/vernesong/OpenClash package/openclash
        # Smartdns
        git clone https://github.com/simonsmh/openwrt-smartdns package/smartdns
        git clone https://github.com/simonsmh/luci-app-smartdns package/luci-app-smartdns
        # Dependency
        #git clone https://github.com/shadowsocks/openwrt-feeds package/custom
        pushd package/openwrt-dist-luci/tools/po2lmo ; make && sudo make install ; popd
        ./scripts/feeds update -a
        ./scripts/feeds install golang c-ares libev libopenssl libsodium mbedtls pcre
        ./scripts/feeds uninstall uclibc++
    - name: Compile
      env:
        SDK_URL: ${{ matrix.SDK_URL }}
      run: |
        SDK_HOME=$(head -c -8 <<< $(basename $SDK_URL))
        #
        cd $SDK_HOME
        make defconfig
        # Edit config
        sed -i 's/CONFIG_PACKAGE_libpcrecpp=m/CONFIG_PACKAGE_libpcrecpp=n/g' .config
        cp ../key-build ./
        make V=s
    - name: Upload
      env:
        SDK_URL: ${{ matrix.SDK_URL }}
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      run: |
        SDK_HOME=$(head -c -8 <<< $(basename $SDK_URL))
        TAG=$(sed -n 's/.*targets\/\(\w*\)\/.*/\1/p' <<< $SDK_URL)
        # Upload base only
        cd $SDK_HOME/bin/packages/*/base
        git init
        git config user.name "bot"
        git config user.email "bot@github.com"
        git add .
        git commit -m "$TAG"
        git push --force --quiet "https://$GITHUB_TOKEN@github.com/simonsmh/openwrt-dist.git" HEAD:$TAG
  buildimg:
    name: Build Openwrt Image
    needs: buildpkg
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        PROFILE: [netgear_r7800, qihoo-c301, asus_rt-ac58u]
        include:
        - PROFILE: netgear_r7800
          IB_URL: https://downloads.openwrt.org/releases/19.07.0/targets/ipq806x/generic/openwrt-imagebuilder-19.07.0-ipq806x-generic.Linux-x86_64.tar.xz
          PACKAGES: ca-bundle ca-certificates libustream-mbedtls block-mount coreutils coreutils-base64 curl iperf3 ip-full iptables-mod-tproxy kmod-usb-storage-extras kmod-ipt-nat6 libmbedtls luci luci-app-samba luci-app-shadowsocks luci-app-smartdns luci-i18n-base-zh-cn luci-i18n-firewall-zh-cn luci-i18n-opkg-zh-cn luci-i18n-samba-zh-cn luci-i18n-smartdns-zh-cn mount-utils shadowsocks-libev smartdns uhttpd bind-dig knot-dig iperf3 mtr htop wpad-openssl -wpad-basic
        - PROFILE: qihoo-c301
          IB_URL: https://downloads.openwrt.org/releases/19.07.0/targets/ar71xx/generic/openwrt-imagebuilder-19.07.0-ar71xx-generic.Linux-x86_64.tar.xz
          PACKAGES: ca-bundle ca-certificates libustream-mbedtls block-mount coreutils coreutils-base64 curl iperf3 ip-full iptables-mod-tproxy kmod-usb-storage-extras kmod-ipt-nat6 libmbedtls luci luci-app-samba luci-app-shadowsocks luci-app-smartdns luci-i18n-base-zh-cn luci-i18n-firewall-zh-cn luci-i18n-opkg-zh-cn luci-i18n-samba-zh-cn luci-i18n-smartdns-zh-cn mount-utils shadowsocks-libev smartdns uhttpd bind-dig knot-dig iperf3 mtr htop
        - PROFILE: asus_rt-ac58u
          IB_URL: https://downloads.openwrt.org/releases/19.07.0/targets/ipq40xx/generic/openwrt-imagebuilder-19.07.0-ipq40xx-generic.Linux-x86_64.tar.xz
          PACKAGES: ca-bundle ca-certificates libustream-mbedtls block-mount coreutils coreutils-base64 curl iperf3 ip-full iptables-mod-tproxy kmod-usb-storage-extras kmod-ipt-nat6 libmbedtls luci luci-app-samba luci-app-shadowsocks luci-app-smartdns luci-i18n-base-zh-cn luci-i18n-firewall-zh-cn luci-i18n-opkg-zh-cn luci-i18n-samba-zh-cn luci-i18n-smartdns-zh-cn mount-utils shadowsocks-libev smartdns uhttpd bind-dig knot-dig iperf3 mtr htop wpad-openssl -wpad-basic 
    steps:
    - uses: actions/checkout@master
    - name: Env for Openwrt ImageBuilder
      run: sudo apt install -y libncurses-dev
    - name: Download Openwrt ImageBuilder
      env:
        IB_URL: ${{ matrix.IB_URL }}
      run: |
        wget $IB_URL
        tar xf $(basename $IB_URL)
    - name: Build Image
      env:
        PROFILE: ${{ matrix.PROFILE }}
        IB_URL: ${{ matrix.IB_URL }}
        PACKAGES: ${{ matrix.PACKAGES }}
      run: |
        IB_HOME=$(basename $IB_URL|head -c -8)
        TAG=$(echo $IB_URL | sed -n 's/.*targets\/\(\w*\)\/.*/\1/p')
        cd $IB_HOME
        mkdir -p files/root/
        mkdir -p files/etc/opkg/
        mkdir -p files/etc/smartdns/
        cp ../simonsmh-dist.pub files/root/
        wget https://github.com/SYHGroup/easy_shell/raw/master/ddns/CloudFlare-ddns.sh -O files/root/CloudFlare-ddns.sh
        wget https://github.com/SYHGroup/easy_shell/raw/master/sss/update_list -O files/root/update_list
        wget https://gist.githubusercontent.com/simonsmh/2a609e0c801acabc2e1d7733432bce4c/raw/blacklist-ip.conf -O files/etc/smartdns/blacklist-ip.conf
        echo "src/gz simonsmh https://github.com/simonsmh/openwrt-dist/raw/$TAG" > files/etc/opkg/customfeeds.conf
        echo "src/gz simonsmh https://github.com/simonsmh/openwrt-dist/raw/$TAG" >> repositories.conf
        TERM=xterm-256color make image PROFILE="$PROFILE" PACKAGES="$PACKAGES" FILES=files/
    - name: Upload
      env:
        PROFILE: ${{ matrix.PROFILE }}
        IB_URL: ${{ matrix.IB_URL }}
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      run: |
        IB_HOME=$(basename $IB_URL|head -c -8)
        TAG=$(echo $IB_URL | sed -n 's/.*targets\/\(\w*\)\/.*/\1/p')
        # Upload image
        cd $IB_HOME/bin/targets/$TAG/*
        git init
        git config user.name "bot"
        git config user.email "bot@github.com"
        git add .
        git commit -m "$PROFILE"
        git push --force --quiet "https://$GITHUB_TOKEN@github.com/simonsmh/openwrt-dist.git" HEAD:$PROFILE
